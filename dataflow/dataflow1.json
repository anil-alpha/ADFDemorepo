{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "flowlet",
						"type": "DatasetReference"
					},
					"name": "empflowlet"
				},
				{
					"dataset": {
						"referenceName": "deptflowlet",
						"type": "DatasetReference"
					},
					"name": "depflowlet"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "aggregatedep"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as short,",
				"          Name as string,",
				"          gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empflowlet",
				"source(output(",
				"          ID as short,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> depflowlet",
				"empflowlet aggregate(groupBy(Name,",
				"          ID,",
				"          gender),",
				"     count = count(),",
				"     partitionBy('hash', 1)) ~> aggregate1",
				"depflowlet aggregate(groupBy(Name,",
				"          ID),",
				"     ID = count(),",
				"     partitionBy('hash', 1)) ~> aggregatedep",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          empid as string,",
				"          empname as string,",
				"          empsal as string,",
				"          depud as string",
				"     ),",
				"     partitionFileNames:['outpurflowlet.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink3"
			]
		}
	}
}